<?php

/**
 * BaseEvent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property timestamp $starts_at
 * @property timestamp $finishes_at
 * @property integer $entry_prize
 * @property boolean $is_public
 * @property Doctrine_Collection $Tournaments
 * 
 * @method string              getName()        Returns the current record's "name" value
 * @method timestamp           getStartsAt()    Returns the current record's "starts_at" value
 * @method timestamp           getFinishesAt()  Returns the current record's "finishes_at" value
 * @method integer             getEntryPrize()  Returns the current record's "entry_prize" value
 * @method boolean             getIsPublic()    Returns the current record's "is_public" value
 * @method Doctrine_Collection getTournaments() Returns the current record's "Tournaments" collection
 * @method Event               setName()        Sets the current record's "name" value
 * @method Event               setStartsAt()    Sets the current record's "starts_at" value
 * @method Event               setFinishesAt()  Sets the current record's "finishes_at" value
 * @method Event               setEntryPrize()  Sets the current record's "entry_prize" value
 * @method Event               setIsPublic()    Sets the current record's "is_public" value
 * @method Event               setTournaments() Sets the current record's "Tournaments" collection
 * 
 * @package    sfHfLan
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEvent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('event');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('starts_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('finishes_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('entry_prize', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Tournament as Tournaments', array(
             'local' => 'id',
             'foreign' => 'event_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'name',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}